# Cleans up whitelisted expressions from the message
# This is basically a bypass for certain patterns
whitelist:
  enabled: true

general:
  # If enabled, other checks will ignore non-latin characters to improve detection.
  sanitize: true

  # If enabled, other checks will ignore player names to improve detection.
  sanitize-names: true

  # Filter and remove non-latin characters from all messages.
  filter-other: false

  # Commands that will be treated as normal messages
  commands:
    - /broadcast
    - /ebroadcast
    - /bc
    - /ebc
    - /tell
    - /etell
    - /msg
    - /emsg
    - /reply
    - /ereply
    - /r
    - /er
    - /global
    - /g

# Checks if the player is using blacklisted words.
blacklist:
  enabled: true

  # Custom module name.
  custom-module-name: "Swearing"

  # Show a fake message to the player to make him think his message was sent.
  # This doesnt work if the plugin is on BungeeCord.
  fake_message: false

  # Hide the words the player wrote with a ***
  censorship:
    enabled: false
    # Replacement to be used
    replacement: "***"

  warn:
    # Amount of warns required to execute the commands.
    # Set to -1 to disable this feature completely.
    max: 3

    # Sends a notification to players with chatsentinel.notify permission.
    # Set to "" to disable this feature completely.
    # You can use %server% on BungeeCord to get the server name.
    notification: "&c&lCS: &e%player% &ffailed &6%module% &7(&c%message%&7)"

    # Discord webhook notification.
    webhook-notification: true

  # You need a mute plugin for ChatSentinel to mute players. (Recommended: LiteBans/AdvancedBans)
  # Set to [] to disable this feature completely.
  punishments:
    - "mute -s %player% Offensive Language (%message%) 1d"
  
  # if fake_message is false
  # and if censorship is false
  # The message will be cancelled.
  block_raw_message: true

# Checks if messages have too many caps.
caps:
  enabled: true

  # Custom module name.
  custom-module-name: "Caps"

  # If this is true it will replace the caps with low-case letters.
  replace: true

  # Maximum amount of caps allowed.
  max: 8

  warn:
    # Amount of warns required to execute the commands.
    # Set to -1 to disable this feature completely.
    max: -1

    # Sends a notification to players with chatsentinel.notify permission.
    # Set to "" to disable this feature completely.
    notification: "&c&lCS: &e%player% &ffailed &6%module% &7(&c%message%&7)"

    # Discord webhook notification.
    webhook-notification: true

  # You need a mute plugin for ChatSentinel to mute players. (Recommended: LiteBans/AdvancedBans)
  # Set to [] to disable this feature completely.
  punishments: []

# Checks if player is chatting too fast.
cooldown:
  enabled: true

  # Time in milliseconds.
  time:
    repeat-global: 1000
    repeat: 10000
    normal: 1000
    command: 400

# Checks if player is using too many repeated characters.
flood:
  enabled: true

  # Custom module name.
  custom-module-name: "Flood"

  # If this is true it will replace the flood instead of cancelling it.
  # Example: Heloooooo would be converted to just Helloo
  replace: true

  # Regex pattern to do the checks and replacement.
  pattern: (\w)\1{5,}|(\w{28,})|([^\w√±]{20,})|(^.{220,}$)

  warn:
    # Amount of warns required to execute the commands.
    # Set to -1 to disable this feature completely.
    max: -1

    # Sends a notification to players with chatsentinel.notify permission.
    # Set to "" to disable this feature completely.
    notification: "&c&lCS: &e%player% &ffailed &6%module% &7(&c%message%&7)"

    # Discord webhook notification.
    webhook-notification: true

  # You need a mute plugin for ChatSentinel to mute players. (Recommended: LiteBans/AdvancedBans)
  # Set to [] to disable this feature completely.
  punishments: []

# Checks if the player is using syntax.
# Example: testplugin:testcommand
syntax:
  # Do you want to enable this module?
  enabled: true

  # Custom module name.
  custom-module-name: "Syntax"

  # Syntax commands that will not be checked.
  # Set to {} to disable whitelist.
  whitelist:
    - "/strikepractice:"

  warn:
    # Amount of warns required to execute the commands.
    # Set to -1 to disable this feature completely.
    max: -1

    # Sends a notification to players with chatsentinel.notify permission.
    # Set to "" to disable this feature completely.
    notification: "&c&lCS: &e%player% &ffailed &6%module% &7(&c%message%&7)"

    # Discord webhook notification.
    webhook-notification: true

  # You need a mute plugin for ChatSentinel to mute players. (Recommended: LiteBans/AdvancedBans)
  # Set to [] to disable this feature completely.
  punishments: []

# Discord webhook configuration.
discord-webhook:
  # Do you want to enable this module?
  enabled: false

  # Discord webhook URL.
  webhook-url: "Your Discord Webhook URL here"

  sender:
    # Sender avatar URL.
    avatar-url: "https://avatars.githubusercontent.com/u/53847752?s=128&v=4"

    # Sender username.
    username: "ArkFlame Development"

  author:
    # Author name.
    name: "ChatSentinel"

    # Author URL.
    url: "https://builtbybit.com/resources/23698/"

    # Author icon URL.
    icon-url: "https://avatars.githubusercontent.com/u/53847752?s=48&v=4"

  # Discord webhook title.
  title: "Notification"

  # Discord webhook color (in hexadecimal format).
  color: "#55FFFF"

  # Discord webhook description.
  description: "**%player%** failed **%module%** (%warns%/%maxwarns%)"

  field-names:
    # Message field name.
    message: "Message"

    # Server field name.
    server: "Server"

  footer:
    # Footer text.
    text: "ChatSentinel Detection"

    # Footer icon url.
    icon-url: "https://avatars.githubusercontent.com/u/53847752?s=48&v=4"

  # Discord webhook thumbnail URL.
  thumbnail-url: "https://avatars.githubusercontent.com/u/53847752?s=128&v=4"
